import 'dart:convert';
import 'dart:io';

import 'package:archive/archive_io.dart';
import 'package:metar/metar.dart';
import 'package:test/test.dart';

const String metarsDirPath = 'test/integration/artifacts/metars';

Iterable<File> listMetars(String path) {
  final dir = Directory(path);
  if (!dir.existsSync()) {
    return Iterable.empty();
  }
  final List<FileSystemEntity> entities = dir.listSync();
  return entities.whereType<File>().where((file) => file.path.endsWith('.bz2'));
}

String decode(String path) {
  final inputStream = InputFileStream(path);
  final archive = BZip2Decoder().decodeBuffer(inputStream);
  return utf8.decode(archive);
}

void createTest(int number, String metar) {
  test('Test ${number.toString().padLeft(5, '0')}: `$metar`', () {
    String bodyRaw = metar.split(' RMK')[0];
    String bodyProcessed = Metar(metar).body.toString();

    expect(bodyRaw, bodyProcessed, reason: '`$metar`');
  });
}

void createTestGroup(File file) {
  // Double-split to cover both Windows/Unix path manipulations
  String fileName = file.path.split('/').last.split('\\').last;
  String groupName = fileName.split('.').first;
  var ignoredMetars = brokenMetars(groupName);
  group('$groupName', () {
    List<String> lines = decode(file.path).split('\n');
    for (int i = 0; i < lines.length; ++i) {
      if (lines[i].isNotEmpty && !ignoredMetars.contains(lines[i])) {
        createTest(i, lines[i]);
      }
    }
  });
}

void main() {
  group('BodyIntegration', () {
    listMetars(metarsDirPath).forEach((file) {
      createTestGroup(file);
    });
  });
}

List<String> brokenMetars(String key) {
  const katl2021 = <String>[
    // Unrecognizable 'B' keyword in Body section
    'METAR KATL 091652Z 31010KT 10SM -RA SCT030CB BKN040TCU B 29/22 A3012 RMK AO2 RAB48 SLP189 CB SE MOV SE TCU OHD AND ALQDS P0000 T02890222 \$',
    'SPECI KATL 091721Z 27009G15KT 10SM TS SCT030CB SCT040TCU B 31/22 A3011 RMK AO2 LTG DSNT W-NE RAE02 TSB21 FRQ LTGICCGCA SE TS SE MOV SE CB DSNT NE W NW TCU SE-SW P0000 T03110222 \$',
    'SPECI KATL 091807Z 25011G17KT 10SM TS SCT034CB SCT045TCU B 32/22 A3009 RMK AO2 LTG DSNT NW-NE TSB07 FRQ LTGICCGCA NW-N TS NW-N MOV SE CB DSNT N SE NW TCU SW-W T03170217 \$',
    'METAR KATL 091852Z 33013G20KT 10SM TS SCT036CB BKN048TCU B 30/21 A3010 RMK AO2 LTG DSNT NW-E TSB07 SLP181 FRQ LTGICCGCA NW-NE TS NW-NE MOV SE CB DSNT ALQDS TCU ALQDS SHELF COUD NE MOV SE SHRA NW-NE T03000211 \$',
    'SPECI KATL 091905Z 33009KT 10SM TS SCT036CB BKN044TCU B 27/21 A3010 RMK AO2 WSHFT 1849 LTG DSNT NW-E OCNL LTGICCGCA N-E VC NW TS N-E VC NW MOV SE CB DSNT ALQDS TCU E-S-SW SHRA N-E VC NW T02720211 \$',
    'METAR KATL 141852Z 00000KT 10SM -RA FEW036CB SCT046TCU B 25/22 A3026 RMK AO2 PK WND 21028/1813 RAB19 SLP240 CB NE MOV NE TCU N-E DSNT ALQDS P0007 T02500217',
    'METAR KATL 201752Z VRB03KT 10SM SCT022CB BKN032TCU B 27/21 A2999 RMK AO2 SLP145 VIS LWR NW-NE CB NW-NE MOV E TCU ALQDS SHRA NW-NE T02720211 10283 20222 58004',
    'SPECI KATL 201802Z 32012G15KT 8SM -RA SCT022CB BKN032TCU B 26/21 A2999 RMK AO2 RAB01 VIS LWR NW-NE CB NW-NE MOV E TCU ALQDS P0000 T02610211',
    'SPECI KATL 102040Z 21007KT 10SM TS SCT042CB SCT050TCU B 32/22 A3016 RMK AO2 LTG DSNT E-SW TSB36 OCNL LTGICCG NE-E TS NE-E MOV NE CB DSNT E-S-SW TCU ALQDS T03220222',
    'METAR KATL 102052Z 20009KT 10SM VCTS SCT043CB SCT050TCU B 32/22 A3015 RMK AO2 LTG DSNT E-SW SLP199 TSB36 OCNL LTGICCA VC SE S TS VC SE S MOV N CB DSNT E-S-SW TCU ALQDS T03220222 56016 )',
    'METAR KATL 111652Z 24004KT 10SM BKN032CB BKN040TCU B 31/22 A3020 RMK AO2 LTG DSNT SW SLP217 CB OHD-SE MOV STNRY TCU ALQDS CB DSNT SW SHRA SE T03060222',
    'SPECI KATL 111709Z 14006KT 8SM -RA BKN032CB BKN040TCU B 29/22 A3019 RMK AO2 LTG DSNT NE RAB08 VIS LWR NE-SE CB NE-SE MOV STNRY TCU ALQDS CB DSNT NE P0000 T02940217',
    'SPECI KATL 111719Z 12006KT 8SM -TSRA BKN032CB BKN040TCU B 28/23 A3019 RMK AO2 LTG DSNT NE AND E RAB08 TSB18 VIS LWR NE-SE OCNL LTGICCA NE-SE TS NE-SE MOV STNRY CB DSNT NE E TCU ALQDS P0000 T02830228',
    'SPECI KATL 301935Z 12013G26KT 3/4SM R09R/5000VP6000FT RA BKN034CB BKN042TCU B 24/21 A2997 RMK AO2 PK WND 14026/1927 SFC VIS 2 LTG DSNT SE AND NW CB OHD-NE-SE MOV NW CB DSNT SE NW TCU ALQDS P0011 T02440211',
    'SPECI KATL 301938Z 10010G21KT 4SM R09R/5000VP6000FT -TSRA BKN034CB BKN042TCU B 24/21 A2996 RMK AO2 PK WND 14026/1927 LTG DSNT E AND SE AND NW TSB37 OCNL LTGICCA NE-E TS NE-E MOV NW CB DSNT SE NW TCU ALQDS P0011 T02440211',
    'METAR KATL 071752Z 11006KT 6SM -RA FEW028CB SCT038TCU B 26/22 A3001 RMK AO2 RAB15 SLP151 VIS LWR SE-S CB SE-S MOV NE TCU N-NE SE SW P0011 60012 T02610217 10294 20228 58009',
    'METAR KATL 211752Z 05005KT 10SM SCT018CB BKN028TCU B 27/22 A3009 RMK AO2 SLP180 CB SE MOV E TCU ALQDS SHRA E-SE 60000 T02670217 10267 20222 58007',
    'METAR KATL 212152Z 10010KT 10SM -RA SCT018CB BKN025TCU B 26/22 A3003 RMK AO2 RAB32 SLP159 CB E-SE MOV STNRY TCU OHD-ALQDS P0003 T02610222',
    // Unrecognizable 'S' keyword in Body section
    'SPECI KATL 102150Z 04005KT 10SM VCTS FEW035CB SCT050TCU S 28/21 A3005 RMK AO2 LTG DSNT NW TSE49 OCNL LTGICCG NW-NE TS NW-NE MOV E TCU E & S & SW SHRA E & S & SW FIBI',
    'METAR KATL 102152Z 04005KT 10SM VCTS FEW035CB SCT050TCU S 28/21 A3005 RMK AO2 TSE49 SLP167 OCNL LTGICCG VC NW-NE TS VC NW-NE MOV E TCU E-SE & S-SW SHRA E-SE & S-SW T02830211 PS)',
    'SPECI KATL 110007Z 21011G21KT 10SM TS FEW032CB SCT060TCU S 25/22 A3006 RMK AO2 RAE1858 TSB05 OCNL LTGIC S-SW TS S-SW MOV NE TCU SW & DSNT N CB DSNT NW P0000 T02500217 \$',
    'SPECI KATL 110021Z 15008G22KT 7SM R09R/2200V6000FT -TSRA FEW032CB SCT060TCU S 23/21 A3005 RMK A02 PK WND 23028/0010 RAB14 TSB05 OCNL LTGIC OHD-S-SW TS OHD-S-SW MOV NE VIS S-W 1 1/4 TCU DSNT NW P0021 T02330206 T02330 \$',
    'METAR KATL 141752Z 23007KT 10SM FEW036CB SCT044TCU S 29/19 A3027 RMK AO2 LTG DSNT NE SLP241 CB SW DSNT NE SW MOV NE TCU ALQDS SHRA SW DSNT NE T02940189 10311 20233 58010',
    // Unrecognizable '2//21' keyword in Body section
    'METAR KATL 281452Z 18007KT 10SM SCT010 2//21 A2991 RMK AO2 RAB23E35 SLP123 CIG 013V017 P0000 60000 T02000172 10200 20178 58020',
    // Unreported wind group values before 'KT' keyword in Body section
    'SPECI KATL 221447Z KT 10SM SCT012 SCT026 26/23 A2999 RMK AO2 \$',
  ];

  const metars = <String, List<String>>{
    '2021_KATL': katl2021,
  };
  return metars[key] ?? <String>[];
}
